#include <WiFi.h>
#include <HTTPClient.h>

// Ganti dengan kredensial WiFi Anda
const char* ssid = "ssid";
const char* password = "pw";

// Ganti dengan URL Web App Google Apps Script Anda untuk menerima data
String serverReadURL = "URL Spreadsheet"; // Pastikan URL tidak ter-redirect

// Ganti dengan URL Web App Google Apps Script Anda untuk mengirim data
String serverSendURL = "URL Spreadsheet";

const int ledPin = 2;

void setup() {
  Serial.begin(115200);
  pinMode(ledPin, OUTPUT); // Set pin LED sebagai output

  // Menghubungkan ke WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Menghubungkan ke WiFi...");
  }
  Serial.println("Terhubung ke WiFi!");
}

void loop() {
  // Membaca data dari Spreadsheet untuk status LED
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverReadURL); 
    http.setFollowRedirects(HTTPC_STRICT_FOLLOW_REDIRECTS); // Tambahkan baris ini untuk mengikuti redirect otomatis

    int httpResponseCode = http.GET();

    if (httpResponseCode > 0) {
      String response = http.getString();
      response.trim(); // Menghapus spasi tambahan atau newline

      Serial.print("Data dari server: ");
      Serial.println(response); // Menampilkan respons dari server

      if (response == "ON") {
        digitalWrite(ledPin, HIGH); // Nyalakan LED
        Serial.println("LED ON");
      } else if (response == "OFF") {
        digitalWrite(ledPin, LOW); // Matikan LED
        Serial.println("LED OFF");
      } else {
        Serial.println("Data tidak valid dari server!");
      }
    } else {
      Serial.print("Error pada pembacaan data, Kode Response: ");
      Serial.println(httpResponseCode);
    }

    http.end(); // Tutup koneksi
  }

  // Membaca input dari Serial Monitor dan mengirimkan ke Spreadsheet
  if (Serial.available() > 0) {
    String inputSerial = Serial.readString();
    inputSerial.trim();

    if (inputSerial.length() > 0) {
      String serverSendURLWithMessage = serverSendURL + "?message=" + inputSerial;

      HTTPClient httpSend;
      httpSend.begin(serverSendURLWithMessage);
      httpSend.setFollowRedirects(HTTPC_STRICT_FOLLOW_REDIRECTS); // Pastikan mengikuti redirect juga

      int httpResponseCode = httpSend.GET();

      if (httpResponseCode > 0) {
        Serial.print("Data berhasil dikirim ke server, Kode Response: ");
        Serial.println(httpResponseCode);
      } else {
        Serial.print("Gagal mengirim data, Kode Response: ");
        Serial.println(httpResponseCode);
      }

      httpSend.end(); // Tutup koneksi
    }
  }

  delay(100); // Delay 2 detik untuk pembaruan data
}
